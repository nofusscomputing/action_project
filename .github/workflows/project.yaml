---

name: Project


on:
  workflow_call:
    inputs:
      PROJECT_URL:
        required: true
        description: What project to triage issues/pr for
        type: string
      TRIAGE_EVENT_ACTION:
        required: false
        default: "${{ github.event.action }}"
        description: Event action that triggered to workflow
        type: string
      TRIAGE_EVENT_NAME:
        required: false
        default: "${{ github.event_name }}"
        description: Name of event that triggered to workflow
        type: string
      TRIAGE_ITEM_NUMBER:
        required: false
        default: 0
        description: Number of the item that triggered the workflow (issue/PR)
        type: number
      TRIAGE_ITEM_URL:
        required: false
        default: "none"
        description: URL of the item that triggered the workflow (issue/PR)
        type: string
    secrets:
      WORKFLOW_TOKEN:
        description: Token used to with permission to the project
        required: true


jobs:


  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:

      - name: Variables
        run: |
          echo "[Debug] github.event_name=${{ github.event_name }}";
          echo "[Debug] github.event.action=${{ github.event.action }}";
          echo "[Debug] github.repository=${{ github.repository }}";
          echo "[Debug] github.event.pull_request.author_association=${{ github.event.pull_request.author_association }}";
          echo "[Debug] github.triggering_actor=${{ github.triggering_actor }}";

          echo "[Debug] inputs.TRIAGE_EVENT_ACTION=${{ inputs.TRIAGE_EVENT_ACTION }}";
          echo "[Debug] inputs.TRIAGE_EVENT_NAME=${{ inputs.TRIAGE_EVENT_NAME }}";


  prepare:
    name: Preparation
    runs-on: ubuntu-latest
    outputs:
      triage_item_url: ${{ steps.triage_item_url.outputs.triage_item_url }}
    steps:


      - name: Build Item URL
        id: triage_item_url
        shell: bash
        run: |

          if [ "${{ inputs.TRIAGE_ITEM_URL }}" == "none" ]; then

            if [ "${{inputs.TRIAGE_EVENT_NAME }}" == 'pull_request' ]; then

              echo "triage_item_url=https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}" > $GITHUB_OUTPUT;

            else

              echo "triage_item_url=https://github.com/${{ github.repository }}/issues/${{ github.event.issue.number }}" > $GITHUB_OUTPUT;

            fi;

          else

            echo "triage_item_url=${{ inputs.TRIAGE_ITEM_URL }}" > $GITHUB_OUTPUT;

          fi;


  project-add:
    name: Add
    needs:
      - prepare
    if: ${{(
      (
        inputs.TRIAGE_EVENT_NAME == 'issues'
          &&
        (
          inputs.TRIAGE_EVENT_ACTION == 'opened'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'reopened'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'labeled'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'milestoned'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'demilestoned'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'closed'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'assigned'
        )
      )
        ||
      (
        inputs.TRIAGE_EVENT_NAME == 'pull_request'
          &&
        (
          inputs.TRIAGE_EVENT_ACTION == 'opened'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'edited'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'assigned'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'reopened'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'closed'
        )
      )
      )}}
    runs-on: ubuntu-latest
    steps:

      - uses: actions/add-to-project@244f685bbc3b7adfa8466e08b698b5577571133e    # v1.0.2
        with:
          project-url: ${{ inputs.PROJECT_URL }}
          github-token: ${{ secrets.WORKFLOW_TOKEN }}



  project-remove:
    name: Remove
    if: ${{(
        inputs.TRIAGE_EVENT_NAME == 'issues' && inputs.TRIAGE_EVENT_ACTION == 'transferred'
      )}}
    runs-on: ubuntu-latest
    steps:

      - name: Remove From Project
        run: |
          echo todo;



  project-fields:
    name: Field Values
    if: ${{(
        (inputs.TRIAGE_EVENT_NAME == 'issues' && inputs.TRIAGE_EVENT_ACTION != 'transferred')
          ||
        (inputs.TRIAGE_EVENT_NAME == 'pull_request')
      )}}
    needs:
      - prepare
      - project-add
    runs-on: ubuntu-latest
    outputs:
      project-start-date:  ${{ steps.start-date.outputs.values }}
      project-end-date:  ${{ steps.end-date.outputs.values }}
      project-status:  ${{ steps.status.outputs.values }}
      date-value:  ${{ steps.date-value.outputs.date }}
    steps:

      - name: Generate Date Value
        id: date-value
        shell: bash
        run: |
          echo date=$(date '+%Y-%m-%d') > $GITHUB_OUTPUT


      - name: Fetch Start Date
        uses: EndBug/project-fields@v2
        id: start-date
        with:
          operation: get
          fields: Start date
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}


      - name: Fetch End Date
        uses: EndBug/project-fields@v2
        id: end-date
        with:
          operation: get
          fields: End date
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}


      - name: Fetch Status
        uses: EndBug/project-fields@v2
        id: status
        with:
          operation: get
          fields: Status
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}



  project-set-start-date:
    name: Set Start Date
    if: ${{(
        (
          (inputs.TRIAGE_EVENT_NAME == 'issues' && inputs.TRIAGE_EVENT_ACTION == 'assigned')
            ||
          inputs.TRIAGE_EVENT_NAME == 'pull_request'
        )
          &&
        needs.project-fields.outputs.project-start-date == ''
      )}}
    needs:
      - prepare
      - project-fields
    runs-on: ubuntu-latest
    steps:

      - name: Set Start Date
        if: ${{ needs.project-fields.outputs.project-start-date == '' }}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: Start date
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}
          values: ${{ needs.project-fields.outputs.date-value }} 


  
  project-set-status:
    name: Set Status
    if: ${{(
        needs.project-fields.outputs.project-status != 'Awaiting Feedback'
          &&
        needs.project-fields.outputs.project-status != 'In progress'
      )}}
    needs:
      - prepare
      - project-fields
    runs-on: ubuntu-latest
    steps:


      - name: Set Status Planning
        if: ${{ inputs.TRIAGE_EVENT_NAME == 'issues' && inputs.TRIAGE_EVENT_ACTION == 'milestoned' }}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: Status
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}
          values: 'Planning'


      - name: Set Status In Progress
        if: ${{(
            (inputs.TRIAGE_EVENT_NAME == 'issues' && inputs.TRIAGE_EVENT_ACTION == 'assigned')
              ||
            inputs.TRIAGE_EVENT_NAME == 'pull_request' && inputs.TRIAGE_EVENT_ACTION != 'closed'
          )}}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: Status
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}
          values: 'In progress'


      - name: Set Status done
        if: ${{ inputs.TRIAGE_EVENT_ACTION == 'closed' }}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: Status
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}
          values: 'Done'


      - name: Clear Status
        if: ${{(
            (
              (inputs.TRIAGE_EVENT_NAME == 'issues' && inputs.TRIAGE_EVENT_ACTION == 'reopened')
                ||
              (inputs.TRIAGE_EVENT_NAME == 'issues' && inputs.TRIAGE_EVENT_ACTION == 'demilestoned')
            ) 
            &&
            needs.project_fields.project-status != 'Ready to Commence'
          )}}
        uses: EndBug/project-fields@v2
        with:
          operation: clear
          fields: Status
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}



  project-set-end-date:
    name: Set End Date
    if: ${{(
        needs.project-fields.outputs.project-start-date != ''
          &&
        (
          inputs.TRIAGE_EVENT_ACTION == 'closed'
            ||
          inputs.TRIAGE_EVENT_ACTION == 'reopened'
        )
      )}}
    needs:
      - prepare
      - project-fields
    runs-on: ubuntu-latest
    steps:


      - name: Set End date
        if: ${{(
            inputs.TRIAGE_EVENT_ACTION == 'closed'
              &&
            needs.project-fields.outputs.project-end-date == ''
          )}}
        uses: EndBug/project-fields@v2
        with:
          operation: set
          fields: End date
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}
          values: ${{ needs.project-fields.outputs.date-value }} 


      - name: Clear End Date
        if: ${{(
            inputs.TRIAGE_EVENT_NAME == 'issues' && inputs.TRIAGE_EVENT_ACTION == 'reopened'
          )}}
        uses: EndBug/project-fields@v2
        with:
          operation: clear
          fields: End date
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          project_url: ${{ inputs.PROJECT_URL }}
          resource_url: ${{ needs.prepare.outputs.triage_item_url }}
